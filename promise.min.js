/*
 * Promise - Promises API
 *
 * An additional modules of CokeUtil, also indenpendent usage as Promise.
 *
 * Released under the MIT license
 *
 * See https://github.com/riotkkwok/CokeUtil for details
 *
 * Auther: Rio Kwok
 *
 * Version: 0.1
 *
 * Updates: 
 * 1. Initial.
 *
 */
!function(){var e=function(e,n){var r=this;return r.queue=[],r.current=0,r.isResolved=!1,r.isNextThen=!1,r.resolveArgs=null,r.then=function(e,n){var t=r.isNextThen&&r.current===r.queue.length;return"function"==typeof e&&(r.queue.push({fn:e,isAsyn:!!n,isDone:!1}),t&&r.next.apply(r,r.resolveArgs)),r},r.start=function(){var e=Array.prototype.slice.call(arguments);return r.resolve.apply(r,e),r},r.resolve=function(){var e=Array.prototype.slice.call(arguments);return r.isResolved?void console.warn("repeat to resolve error."):(r.isResolved=!0,r.isNextThen=!0,r.resolveArgs=e,void r.next.apply(r,e))},r.next=function(){var e=Array.prototype.slice.call(arguments);return r.isResolved?(r.isNextThen=!0,void(r.current!=r.queue.length&&(cbFunc=r.queue[r.current++],cbFunc.fn.apply(r,e),cbFunc.isDone=!0,cbFunc.isAsyn?r.isNextThen=!1:r.next.apply(r,e)))):void console.warn("unresolved error.")},e&&r.then(e,n),r};e.when=function(){function n(e){for(var n=0,o=0;o<r.length;o++)e===r[o]&&(r[o]=null),null===r[o]&&n++;n===r.length&&t.resolve()}for(var r=Array.prototype.slice.call(arguments),t=new e,o=0;o<r.length;o++)r[o]instanceof e&&r[o].then(function(){var e=this;setTimeout(function(){n(e)},0)});return t},window.CokeUtil?window.CokeUtil.Promise=e:window.Promise=e}();