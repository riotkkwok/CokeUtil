/*
 * UPromise - Promises API
 *
 * An additional modules of CokeUtil, also indenpendent usage as UPromise.
 *
 * Released under the MIT license
 *
 * See https://github.com/riotkkwok/CokeUtil for details
 *
 * Auther: Rio Kwok
 *
 * Version: 1.1.0
 *
 * Updates: 
 * 1. rename as UPromise
 * 2. update serveral lines of code to follow the JSLint's rule
 *
 */
(function(a){if(typeof exports==="object"&&typeof module!=="undefined"){modul.exports=a()}else{if(typeof define==="function"&&define.amd){define(a)}else{if(window.CokeUtil){window.CokeUtil.UPromise=a()}else{window.UPromise=a()}}}})(function(){var a=function(c,d){var b=this;b.queue=[];b.current=0;b.isResolved=false;b.isNextThen=false;b.resolveArgs=null;b.then=function(e,f){var g=b.isNextThen&&(b.current===b.queue.length);if(typeof e=="function"){b.queue.push({fn:e,isAsyn:!!f,isDone:false});if(!!g){b.next.apply(b,b.resolveArgs)}}return b};b.start=function(){var e=Array.prototype.slice.call(arguments);b.resolve.apply(b,e);return b};b.resolve=function(){var e=Array.prototype.slice.call(arguments);if(b.isResolved){console.warn("repeat to resolve error.");return}b.isResolved=true;b.isNextThen=true;b.resolveArgs=e;b.next.apply(b,e)};b.next=function(){var e=Array.prototype.slice.call(arguments),f;if(!b.isResolved){console.warn("unresolved error.");return}b.isNextThen=true;if(b.current!=b.queue.length){f=b.queue[b.current++];f.fn.apply(b,e);f.isDone=true;if(!f.isAsyn){b.next.apply(b,e)}else{b.isNextThen=false}}};if(c){b.then(c,d)}return b};a.when=function(){var b=Array.prototype.slice.call(arguments),e=new a();function d(){var f=this;setTimeout(function(){var g=0;for(var h=0;h<b.length;h++){if(f===b[h]){b[h]=null}if(b[h]===null){g++}}if(g===b.length){e.resolve()}},0)}for(var c=0;c<b.length;c++){if(b[c] instanceof a){b[c].then(d)}}return e};return a});